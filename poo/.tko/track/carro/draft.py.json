{
    "patches": [
        {
            "label": "2025-09-29_11-49-10",
            "content": "@@ -1,1851 +0,0 @@\n-class Car:%0A    def __init__(self):%0A        self.pass_ = 0%0A        self.passMax = 2 %0A        self.gas = 0%0A        self.gasMax = 100%0A        self.km = 0%0A%0A    def __str__(self):%0A        return f%22pass: %7Bself.pass_%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A    %0A    def enter(self):%0A        if self.pass_ %3C self.passMax:%0A            self.pass_ += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22)%0A%0A    def leave(self):%0A        if self.pass_ %3C self.passMax:%0A            self.pass_ += 1 %0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A    def fuel(self, increment: int):%0A        self.gas += increment%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax%0A%0A    def drive(self, distance: int):%0A        if self.pass_ == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        %0A        if distance %3C= self.gas:%0A            self.gas -= distance%0A            self.gas += distance%0A        else:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A%0A        def show(self):%0A            print(self.__str__())%0A%0Adef main():%0A    car = Car()%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A%0A        if line == %22%22:%0A            continue%0A%0A        args = line.split()%0A%0A        if args%5B0%5D == %22$end%22:%0A            break%0A        elif args%5B0%5D == %22$show%22:%0A            car.show()%0A        elif args%5B0%5D == %22$enter%22:%0A            car.enter()%0A        elif args%5B0%5D == %22$leave%22:%0A            car.leave()%0A        elif args%5B0%5D == %22$fuel%22:%0A            car.fuel(int(args%5B1%5D))%0A        elif args%5B0%5D == %22$drive%22:%0A            car.drive(int(args%5B1%5D))%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0A    main() \n",
            "lines": "0"
        },
        {
            "label": "2025-10-05_20-08-55",
            "content": "@@ -445,11 +445,22 @@\n ss_ \n-%3E 0\n+%3C self.passMax\n :%0A  \n@@ -480,17 +480,17 @@\n f.pass_ \n--\n++\n = 1 %0A   \n@@ -1132,40 +1132,8 @@\n m%22)%0A\n-            self.km += self.gas%0A\n     \n@@ -1836,34 +1836,8 @@\n %22)%0A%0A\n-if __name__ == %22__main__%22:\n %0A   \n",
            "lines": "77"
        },
        {
            "label": "2025-10-05_20-24-45",
            "content": "@@ -44,21 +44,18 @@\n self.pas\n-: int\n+s_\n  = 0%0A   \n@@ -71,21 +71,16 @@\n .passMax\n-: int\n  = 2 %0A  \n@@ -117,21 +117,16 @@\n f.gasMax\n-: int\n  = 100%0A \n@@ -200,16 +200,18 @@\n self.pas\n+s_\n %7D, gas: \n@@ -257,32 +257,24 @@\n  enter(self)\n- -%3E None\n :%0A        if\n@@ -282,16 +282,18 @@\n self.pas\n+s_\n  %3C self.\n@@ -321,16 +321,18 @@\n self.pas\n+s_\n  += 1%0A  \n@@ -417,24 +417,16 @@\n ve(self)\n- -%3E None\n :%0A      \n@@ -438,16 +438,18 @@\n self.pas\n+s_\n  %3E 0:%0A  \n@@ -466,16 +466,18 @@\n self.pas\n+s_\n  -= 1 %0A \n@@ -571,32 +571,24 @@\n rement: int)\n- -%3E None\n :%0A        se\n@@ -716,16 +716,8 @@\n int)\n- -%3E None\n :%0A  \n@@ -733,16 +733,18 @@\n self.pas\n+s_\n  == 0:%0A \n@@ -812,34 +812,32 @@\n  return%0A        \n-el\n if self.gas == 0\n@@ -905,20 +905,61 @@\n         \n-elif\n+%0A        if distance %3C= self.gas:%0A           \n  self.ga\n@@ -960,17 +960,18 @@\n elf.gas \n-%3C\n+-=\n  distanc\n@@ -971,16 +971,62 @@\n distance\n+%0A            self.gas += distance%0A        else\n :%0A      \n@@ -1134,32 +1134,43 @@\n    self.\n-gas = 0%0A\n+km += self.gas%0A    \n         \n else:%0A  \n@@ -1165,175 +1165,253 @@\n     \n+s\n el\n-se:%0A            self.km += distance%0A            self.gas -= distance%0A%0Adef main():%0A    car = Car()%0A    while True:%0A        line: str = input()%0A        print(%22$%22+line)\n+f.gas = 0%0A%0A        def show(self):%0A            print(self.__str__())%0A%0Adef main():%0A    car = Car()%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A%0A        if line == %22%22:%0A            continue%0A\n %0A   \n@@ -1423,19 +1423,8 @@\n args\n-: list%5Bstr%5D\n  = l\n@@ -1437,11 +1437,8 @@\n lit(\n-%22 %22\n )%0A%0A \n@@ -1459,16 +1459,17 @@\n %5B0%5D == %22\n+$\n end%22:%0A  \n@@ -1509,21 +1509,21 @@\n %5B0%5D == %22\n-enter\n+$show\n %22:%0A     \n@@ -1533,21 +1533,20 @@\n     car.\n-enter\n+show\n ()%0A     \n@@ -1565,21 +1565,22 @@\n %5B0%5D == %22\n-leave\n+$enter\n %22:%0A     \n@@ -1590,21 +1590,21 @@\n     car.\n-leave\n+enter\n ()%0A     \n@@ -1623,20 +1623,22 @@\n %5B0%5D == %22\n-fuel\n+$leave\n %22:%0A     \n@@ -1648,32 +1648,52 @@\n     \n-increment = int(args%5B1%5D)\n+car.leave()%0A        elif args%5B0%5D == %22$fuel%22:\n %0A   \n@@ -1712,23 +1712,26 @@\n .fuel(in\n-crement\n+t(args%5B1%5D)\n )%0A      \n@@ -1749,16 +1749,17 @@\n %5B0%5D == %22\n+$\n drive%22:%0A\n@@ -1774,19 +1774,18 @@\n     \n-distance = \n+car.drive(\n int(\n@@ -1796,98 +1796,95 @@\n %5B1%5D)\n-%0A            car.drive(distance)%0A        elif args%5B0%5D == %22show%22:%0A            print(carro)%0A\n+)%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0Aif __name__ == %22__main__%22:\n %0A   \n",
            "lines": "78"
        },
        {
            "label": "2025-10-05_22-29-10",
            "content": "@@ -2,18 +2,16 @@\n lass Car\n-ro\n :%0A    de\n@@ -183,15 +183,8 @@\n elf)\n- -%3E str\n :%0A  \n@@ -454,36 +454,76 @@\n     if self.pas \n-== 0\n+%3E 0:%0A            self.pas -= 1 %0A        else\n :%0A            pr\n@@ -562,48 +562,8 @@\n ro%22)\n-%0A        else:%0A            self.pas -= 1\n %0A%0A  \n@@ -822,24 +822,43 @@\n  no carro%22)%0A\n+            return%0A\n         elif\n@@ -909,24 +909,43 @@\n que vazio%22)%0A\n+            return%0A\n         elif\n@@ -1192,22 +1192,17 @@\n  car\n-ro\n  = Car\n-ro\n ()%0A\n-%0A\n     \n@@ -1403,18 +1403,16 @@\n      car\n-ro\n .enter()\n@@ -1460,18 +1460,16 @@\n      car\n-ro\n .leave()\n@@ -1553,18 +1553,16 @@\n      car\n-ro\n .fuel(in\n@@ -1654,18 +1654,16 @@\n      car\n-ro\n .drive(d\n@@ -1729,15 +1729,19 @@\n carro)%0A%0A\n+    \n main() \n",
            "lines": "66"
        },
        {
            "label": "2025-10-05_22-35-06",
            "content": "class Carro:\n    def __init__(self):\n        self.pas: int = 0\n        self.passMax: int = 2 \n        self.gas = 0\n        self.gasMax: int = 100\n        self.km = 0\n\n    def __str__(self) -> str:\n        return f\"pass: {self.pas}, gas: {self.gas}, km: {self.km}\"\n    \n    def enter(self) -> None:\n        if self.pas < self.passMax:\n            self.pas += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self) -> None:\n        if self.pas == 0:\n            print(\"fail: nao ha ninguem no carro\")\n        else:\n            self.pas -= 1\n\n    def fuel(self, increment: int) -> None:\n        self.gas += increment\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def drive(self, distance: int) -> None:\n        if self.pas == 0:\n            print(\"fail: nao ha ninguem no carro\")\n        elif self.gas == 0:\n            print(\"fail: tanque vazio\")\n        elif self.gas < distance:\n            self.km += self.gas\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.gas = 0\n        else:\n            self.km += distance\n            self.gas -= distance\n\ndef main():\n    carro = Carro()\n\n    while True:\n        line: str = input()\n        print(\"$\"+line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"enter\":\n            carro.enter()\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"fuel\":\n            increment = int(args[1])\n            carro.fuel(increment)\n        elif args[0] == \"drive\":\n            distance = int(args[1])\n            carro.drive(distance)\n        elif args[0] == \"show\":\n            print(carro)\n\nmain() ",
            "lines": "65"
        }
    ]
}