{
    "patches": [
        {
            "label": "2025-09-17_14-53-00",
            "content": "@@ -170,18 +170,8 @@\n cor \n-e tamanho \n da s\n@@ -203,23 +203,8 @@\n t()%0A\n-size = input()%0A\n towe\n@@ -227,20 +227,19 @@\n (color, \n-size\n+%22p%22\n )%0Aprint(\n@@ -270,21 +270,6 @@\n lor%7D\n- e %7Btowel.size%7D\n %22)\n",
            "lines": "13"
        },
        {
            "label": "2025-09-17_14-57-27",
            "content": "@@ -256,11 +256,12 @@\n or, \n-%22p%22\n+size\n )%0Apr\n",
            "lines": "14"
        },
        {
            "label": "2025-09-17_14-58-17",
            "content": "@@ -42,17 +42,16 @@\n or: str,\n- \n size: st\n@@ -54,16 +54,16 @@\n : str):%0A\n+\n         \n@@ -147,16 +147,17 @@\n nt = 0%0A%0A\n+%0A\n print(%22Q\n@@ -252,20 +252,19 @@\n (color, \n-size\n+%22p%22\n )%0Aprint(\n",
            "lines": "14"
        },
        {
            "label": "2025-09-17_14-59-50",
            "content": "@@ -1,8 +1,10 @@\n+%0A%0A\n class To\n@@ -151,1264 +151,166 @@\n = 0%0A\n-    %0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A%0A%0A    def show(self) -%3E None:%0A        print(f%22%7Bself.color%7D %7Bself.size%7D %7Bself.wetness%7D%22)%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.color%7D %7Bself.size%7D %7Bself.wetness%7D%22%0A    %0Adef main():%0A    towel = Towel(%22%22, %22%22)%0A    while True:%0A%0A        line: str = input() %0A        args: list%5Bstr%5D = line.split(%22 %22) %0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22new%22:%0A            color: str = args%5B1%5D%0A            size: str = args%5B2%5D%0A            towel = Towel(color, size)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            towel.dry(amount)%0A        elif args%5B0%5D == %22show%22:%0A            print(towel)%0A        else:%0A            print(%22fail: comando n%C3%A3o encontrado\n+%0Aprint(%22Qual a cor e tamanho da sua toalha?%22)%0Acolor = input()%0Asize = input()%0Atowel: Towel = Towel(color, size)%0Aprint(f%22Sua toalha %C3%A9 %7Btowel.color%7D e %7Btowel.size%7D\n %22)\n-%0A\n",
            "lines": "13"
        },
        {
            "label": "2025-09-30_11-38-54",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n    \n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness > self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0\n\n\n    def show(self) -> None:\n        print(f\"{self.color} {self.size} {self.wetness}\")\n\n    def __str__(self) -> str:\n        return f\"{self.color} {self.size} {self.wetness}\"\n    \ndef main():\n    towel = Towel(\"\", \"\")\n    while True:\n\n        line: str = input() \n        args: list[str] = line.split(\" \") \n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"new\":\n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n        elif args[0] == \"show\":\n            print(towel)\n        else:\n            print(\"fail: comando n\u00e3o encontrado\")\n",
            "lines": "54"
        }
    ]
}