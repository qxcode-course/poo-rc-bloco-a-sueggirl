{
    "patches": [
        {
            "label": "2025-10-05_22-35-49",
            "content": "@@ -1,1823 +0,0 @@\n-class Calculator:%0A    def __init__(self, batteryMax: int):%0A        self.batteryMax: int = batteryMax%0A        self.battery: int = 0%0A        self.display: float = 0.0%0A    %0A    def __str__(self):%0A        return (f%22display = %7Bself.display:.2f%7D, battery = %7Bself.battery%7D%22)%0A    %0A    def Charge(self, increment: int)-%3ENone:%0A        self.battery += increment%0A        if self.battery %3E self.batteryMax:%0A            self.battery = self.batteryMax%0A    %0A    def Sum(self, n1: float, n2: float) -%3E None:%0A        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A            return%0A        else:%0A            self.display = n1 + n2%0A            self.battery -= 1%0A    %0A    def Div(self, n1: float, n2: float) -%3E None:%0A        if self.battery == 0:%0A            print(%22fail: bateria insuficiente%22)%0A            return%0A        if n2 == 0:%0A            print(%22fail: divisao por zero%22)%0A            self.battery -= 1%0A            return%0A        else:%0A            self.display = n1 / n2%0A            self.battery -= 1%0A        %0Adef main():%0A    calculator: Calculator = None%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)   %0A        %0A        if args%5B0%5D == %22end%22:%0A            break%0A        if args%5B0%5D == %22init%22:%0A            batteryMax: int = int(args%5B1%5D)%0A            calculator = Calculator(batteryMax)%0A        if args%5B0%5D == %22charge%22:%0A            increment: int = int(args%5B1%5D)%0A            calculator.Charge(increment)%0A        if args%5B0%5D == %22show%22:%0A            print(calculator)%0A        if args%5B0%5D == %22sum%22:%0A            n1: float = float(args%5B1%5D)%0A            n2: float = float(args%5B2%5D)%0A            calculator.Sum(n1, n2)%0A        if args%5B0%5D == %22div%22:%0A            n1: float = float(args%5B1%5D)%0A            n2: float = float(args%5B2%5D)%0A            calculator.Div(n1, n2)%0A%0Amain()\n",
            "lines": "0"
        },
        {
            "label": "2025-10-05_22-42-30",
            "content": "class Calculator:\n    def __init__(self, batteryMax: int):\n        self.batteryMax: int = batteryMax\n        self.battery: int = 0\n        self.display: float = 0.0\n    \n    def __str__(self):\n        return (f\"display = {self.display:.2f}, battery = {self.battery}\")\n    \n    def Charge(self, increment: int)->None:\n        self.battery += increment\n        if self.battery > self.batteryMax:\n            self.battery = self.batteryMax\n    \n    def Sum(self, n1: float, n2: float) -> None:\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        else:\n            self.display = n1 + n2\n            self.battery -= 1\n    \n    def Div(self, n1: float, n2: float) -> None:\n        if self.battery == 0:\n            print(\"fail: bateria insuficiente\")\n            return\n        if n2 == 0:\n            print(\"fail: divisao por zero\")\n            self.battery -= 1\n            return\n        else:\n            self.display = n1 / n2\n            self.battery -= 1\n        \ndef main():\n    calculator: Calculator = None\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")   \n        \n        if args[0] == \"end\":\n            break\n        if args[0] == \"init\":\n            batteryMax: int = int(args[1])\n            calculator = Calculator(batteryMax)\n        if args[0] == \"charge\":\n            increment: int = int(args[1])\n            calculator.Charge(increment)\n        if args[0] == \"show\":\n            print(calculator)\n        if args[0] == \"sum\":\n            n1: float = float(args[1])\n            n2: float = float(args[2])\n            calculator.Sum(n1, n2)\n        if args[0] == \"div\":\n            n1: float = float(args[1])\n            n2: float = float(args[2])\n            calculator.Div(n1, n2)\n\nmain()",
            "lines": "61"
        }
    ]
}